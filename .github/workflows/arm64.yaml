name: arm64

on:
  push:
  release:
  workflow_dispatch:


jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.DH_USER }}/${{ github.event.repository.name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DH_USER }}
          password: ${{ secrets.DH_TOKEN }}
      # - name: Build a test
      #   uses: docker/build-push-action@v3
      #   with :
      #     context: ./
      #     load: true
      #     tags: app:test
      # - name: Prepare the data
      #   run: |
      #     mkdir -p test_data/figures/
      #     wget https://cf.10xgenomics.com/samples/cell/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz -O test_data/pbmc3k_filtered_gene_bc_matrices.tar.gz
      #     tar -zxvf test_data/pbmc3k_filtered_gene_bc_matrices.tar.gz -C test_data
      # - name: Test
      #   run: |
      #     chmod +x test.R
      #     docker run -v `pwd`:`pwd` -w `pwd` --rm app:test `pwd`/test.R
      #     docker run --rm app:test packages.bash
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DH_USER }}/${{ github.event.repository.name }}:cache
          cache-to: type=registry,ref=${{ secrets.DH_USER }}/${{ github.event.repository.name }}:cache,mode=max
      - name: Get installed package versions
        id: get_versions
        run: |
          docker run -v `pwd`:`pwd` -w `pwd` --rm ${{ secrets.DH_USER }}/${{ github.event.repository.name }} Rscript -e "write.csv(installed.packages()[,c('Package', 'Version')], 'ARM64_installed_packages.csv', row.names=FALSE,quote=FALSE)"
          docker run -v `pwd`:`pwd` -w `pwd` --rm ${{ secrets.DH_USER }}/${{ github.event.repository.name }} Rscript readme_update.R ARM64_installed_packages.csv ARM64.md
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ARM64.md ARM64_installed_packages.csv
          git commit -m "Update installed packages table in README [skip ci]"
          git push
      # - uses: actions/upload-artifact@master
      #   with:
      #     name: figures
      #     path: |
      #       test_data/figures/test*.png
